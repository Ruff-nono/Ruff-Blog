<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Ruff&#39;s Blog</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Ruff&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 03 Nov 2022 15:50:33 +0800</lastBuildDate><atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>gin框架(一)、快速入门</title>
      <link>http://localhost:1313/posts/tech/gin/1-start/</link>
      <pubDate>Thu, 03 Nov 2022 15:01:12 +0800</pubDate>
      
      <guid>http://localhost:1313/posts/tech/gin/1-start/</guid>
      <description>1、什么是gin Gin 是一个用Go (Golang)编写的 开源web 框架。 目前在GitHub Start 47.4K, 它是一个类似于 martini 但拥有更好性能的 API 框架， 路由解析由</description>
    </item>
    
    <item>
      <title>gin框架(二)、服务启动源码解析</title>
      <link>http://localhost:1313/posts/tech/gin/2-start-analyze/</link>
      <pubDate>Thu, 03 Nov 2022 15:50:33 +0800</pubDate>
      
      <guid>http://localhost:1313/posts/tech/gin/2-start-analyze/</guid>
      <description>1、服务启动过程 func main() { r := gin.Default() r.GET(&amp;#34;/ping&amp;#34;, func(c *gin.Context) { c.JSON(http.StatusOK, gin.H{ &amp;#34;message&amp;#34;: &amp;#34;pong&amp;#34;, }) }) r.Run() } 1. gin.Default() gin.Default() 函数会生成一个默认的 Engine 对象，里面包含了 2 个默认的常用插件，分别是 Logger 和 Recover</description>
    </item>
    
    <item>
      <title>One</title>
      <link>http://localhost:1313/posts/life/one/</link>
      <pubDate>Wed, 02 Nov 2022 17:58:56 +0800</pubDate>
      
      <guid>http://localhost:1313/posts/life/one/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Kubernetes架构</title>
      <link>http://localhost:1313/posts/tech/k8s/architecture/</link>
      <pubDate>Thu, 20 Oct 2022 14:23:05 +0800</pubDate>
      
      <guid>http://localhost:1313/posts/tech/k8s/architecture/</guid>
      <description>分层架构 Kubernetes 设计理念和功能其实就是一个类似 Linux 的分层架构 核心层：Kubernetes 最核心的功能，对外提供 API 构建高层的应用，对内提供插件式应用执</description>
    </item>
    
    <item>
      <title>如何云原生</title>
      <link>http://localhost:1313/posts/tech/cloud_native/design/</link>
      <pubDate>Wed, 19 Oct 2022 15:40:40 +0800</pubDate>
      
      <guid>http://localhost:1313/posts/tech/cloud_native/design/</guid>
      <description>云原生技术有利于各组织在公有云、私有云和混合云等新型动态环境中，构建和运行可弹性扩展的应用。 云原生的代表技术包括 容器、服务网格、微服务、不可</description>
    </item>
    
    <item>
      <title>云原生的定义</title>
      <link>http://localhost:1313/posts/tech/cloud_native/definition/</link>
      <pubDate>Wed, 19 Oct 2022 11:58:34 +0800</pubDate>
      
      <guid>http://localhost:1313/posts/tech/cloud_native/definition/</guid>
      <description>云原生概念 什么是云原生（Cloud Native）？伴随着云计算的高速发展，云原生的概念也是一直处于发展变化之中，到目前为止，并没有一个确切的</description>
    </item>
    
    <item>
      <title>Golang 环境安装</title>
      <link>http://localhost:1313/posts/raiders/%E4%B8%AD%E6%96%87%E8%B7%AF%E5%BE%84/</link>
      <pubDate>Mon, 17 Oct 2022 15:57:04 +0800</pubDate>
      
      <guid>http://localhost:1313/posts/raiders/%E4%B8%AD%E6%96%87%E8%B7%AF%E5%BE%84/</guid>
      <description>window环境</description>
    </item>
    
    <item>
      <title>Go_gin</title>
      <link>http://localhost:1313/posts/tech/go_gin/</link>
      <pubDate>Wed, 12 Oct 2022 15:51:31 +0800</pubDate>
      
      <guid>http://localhost:1313/posts/tech/go_gin/</guid>
      <description>---</description>
    </item>
    
    <item>
      <title>🙋🏻‍♂️关于</title>
      <link>http://localhost:1313/about/</link>
      <pubDate>Sat, 06 Nov 2021 14:57:28 +0800</pubDate>
      
      <guid>http://localhost:1313/about/</guid>
      <description>关于我 &amp;hellip;</description>
    </item>
    
    
    
    <item>
      <title>Python环境安装</title>
      <link>http://localhost:1313/posts/raiders/python_env/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/raiders/python_env/</guid>
      <description>window环境</description>
    </item>
    
  </channel>
</rss>
